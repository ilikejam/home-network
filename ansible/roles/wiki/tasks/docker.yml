---
- name: network-github-webhook-handler
  docker_network:
    name: github-webhook-handler

- name: network-wiki
  docker_network:
    name: wiki

- name: network-letsencrypt
  docker_network:
    name: letsencrypt

- name: container-github-webhook-handler
  docker_container:
    name: github-webhook-handler
    image: ilikejam/github-webhook-handler
    restart_policy: always
    user: '{{ users["github_webhook"]["uid"] }}:{{ users["github_webhook"]["gid"] }}'
    mounts:
      - type: bind
        source: /var/run/repos
        target: /repos
        read_only: false
      - type: bind
        source: "{{ github_deploy_key_path }}"
        target: "{{ github_deploy_key_path }}"
        read_only: true
      - type: bind
        source: "{{ github_webhook_secret_path }}"
        target: "{{ github_webhook_secret_path }}"
        read_only: true
    networks:
      - name: github-webhook-handler
    purge_networks: true

- name: stat-haproxy-pem
  stat:
    path: /etc/letsencrypt/haproxy.pem
  register: stat_haproxy_pem_result

- name: oneshot-container-letsencrypt
  when: not stat_haproxy_pem_result.stat.exists
  docker_container:
    name: letsencrypt
    image: ilikejam/letsencrypt
    user: '{{ users["certbot"]["uid"] }}:{{ users["certbot"]["gid"] }}'
    mounts:
      - type: bind
        source: /etc/letsencrypt
        target: /etc/letsencrypt
        read_only: false
    published_ports: 80:8000
    command: "bash -c 'certbot certonly --standalone --preferred-challenges http-01 --http-01-port 8000 --work-dir /var/tmp --logs-dir /var/tmp --agree-tos --non-interactive --cert-name this -m dave@davidstark.name -d docs.davidstark.name --staging && cat /etc/letsencrypt/live/this/fullchain.pem /etc/letsencrypt/live/this/privkey.pem  > /etc/letsencrypt/haproxy.pem'"
    restart_policy: "no"
    detach: false
